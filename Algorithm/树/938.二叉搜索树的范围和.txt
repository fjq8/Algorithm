class Solution {
    public int rangeSumBST(TreeNode root, int L, int R) {
        Stack<TreeNode> stack = new Stack<>();
        int sum=0;
        TreeNode curr;
        stack.push(root);
        while(!stack.empty()){
            curr = stack.pop();
            if(curr.val>=L && curr.val<=R){
                sum += curr.val;
            }
            if(curr.right != null){stack.push(curr.right);}
            
            if(curr.left != null){stack.push(curr.left);}
            
        }
        return sum;
    }
}

//递归版本
class Solution {
    public int rangeSumBST(TreeNode root, int L, int R) {
        if (root == null) {
            return 0;
        }
        if (root.val < L) {
            return rangeSumBST(root.right, L, R);
        }
        if (root.val > R) {
            return rangeSumBST(root.left, L, R);
        }
        return root.val + rangeSumBST(root.left, L, R) + rangeSumBST(root.right, L, R);
    }
}